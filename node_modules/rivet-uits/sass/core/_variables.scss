/*! Rivet - @version v0.5.0 */


// Base font family
$font-base: "BentonSans", "Helvetica Neue", "Helvetica", "sans-serif";




// Main type sizes map. This is used to generate all of the .ts-
// utilitiy classes in "components/_type-scale.scss"

// $key = pixel size, $value = relational units
$type-sizes: (
    12: .75rem,
    14: .875rem,
    16: 1rem,
    18: 1.125rem,
    20: 1.25rem,
    23: 1.4375rem,
    26: 1.625rem,
    29: 1.8125rem,
    32: 2rem,
    36: 2.25rem,
    41: 2.5625rem,
    46: 2.875rem,
    52: 3.25rem,
);

// Type Size variables
$ts-12: map-get($type-sizes, 12);
$ts-14: map-get($type-sizes, 14);
$ts-16: map-get($type-sizes, 16);
$ts-base: $ts-16;
$ts-18: map-get($type-sizes, 18);
$ts-20: map-get($type-sizes, 20);
$ts-23: map-get($type-sizes, 23);
$ts-26: map-get($type-sizes, 26);
$ts-29: map-get($type-sizes, 29);
$ts-32: map-get($type-sizes, 32);
$ts-36: map-get($type-sizes, 36);
$ts-41: map-get($type-sizes, 41);
$ts-46: map-get($type-sizes, 46);
$ts-52: map-get($type-sizes, 52);




// Base colors

$color-white: #ffffff;
$color-subtle-gray: #f7f7f7;
$color-black: #333333;

// Brand Colors

$color-cream: #edebeb;
$color-crimson: #990000;
$color-midnight: #006298;
$color-dark-midnight: #01426a;




// Black tints

$color-black--50: #fafafa;
$color-black--100: #eeeeee;
$color-black--150: #eaeaea;
$color-black--200: #dddddd;
$color-black--300: #cccccc;
$color-black--400: #aaaaaa;
$color-black--500: #999999;
$color-black--600: #777777;
$color-black--700: #666666;
$color-black--800: #555555;
$color-black--900: #444444;

// Use this when you need a default (darkest) black.
$color-black--rich: #000000;




// Midnight Variations

$color-midnight--100: #dce3ee;
$color-midnight--200: #b8c8dc;
$color-midnight--300: #95adcb;
$color-midnight--400: #7194ba;
$color-midnight--500: #497ba9;
$color-midnight--600: #076399;
$color-midnight--700: #134a71;
$color-midnight--800: #16324b;
$color-midnight--900: #121c28;




// Colors by purpose

$color-text: $color-black;
$color-background: $color-white;
$color-background-subtle: $color-subtle-gray;
$color-action: $color-midnight;
$color-link: $color-midnight;
$color-link-visited: $color-dark-midnight;




// Alert colors
// https://styleguide.iu.edu/visual-style/colors.html

// Some of these alert colors have been slightly altered to meet WCAG 2.0
// Standards for sufficient contrast ration against white.

// Alert text colors generated via this handy tool:
// https://codepen.io/basham/pen/OpNybO

$color-alert-gray: #a7a9ab;
$color-alert-gray-light: #eeeeee;
$color-alert-green: #008a28;
$color-alert-green-text: #16521d;
$color-alert-green-light: #ddf4ea;
$color-alert-blue: #49afc7;
$color-alert-blue-text: #284c55;
$color-alert-blue-light: #e9f6fc;
$color-alert-yellow: #f5bb17;
$color-alert-yellow-text: #584416;
$color-alert-yellow-light: #fdf7e7;
$color-alert-orange: #df3603;
$color-alert-orange-text: #82270d;
$color-alert-orange-light: #fdeee8;




// TODO: Should we keep all colors in a map so that we can iterate
// through them to make utility classes?

$color-map: (
    "cream": $color-cream,
    "crimson": $color-crimson,
    "midnight": $color-midnight,
    "dark-midnight": $color-dark-midnight,
    "gray": $color-alert-gray,
    "green": $color-alert-green,
    "blue": $color-alert-blue,
    "yellow": $color-alert-yellow,
    "orange": $color-alert-orange
);




// Global spacing units

$spacing-unit: .5rem;        // 8px

$xxs: $spacing-unit/2;       // 4px
$xs: $spacing-unit;          // 8px
$sm: $spacing-unit * 2;      // 16px Base
$md: $spacing-unit * 3;      // 24px
$lg: $spacing-unit * 4;      // 32px
$xl: $spacing-unit * 5;      // 40px
$xxl: $spacing-unit * 8;     // 64px



// Global breakpoints

$breakpoints: (
    sm: 480px,
    md: 740px,
    lg: 1080px,
    xl: 1260px,
    xxl: 1400px
);


// TODO: This should be depricated moving forward. All instances where it
// was used have been replaced with the $xxs (4px) global variable.
$radius-small: 3px;


// z-index map
// Starts and 0 and works up to 1000. Leaving some space between intervals
// here so that we can add fine tune adjustments when/if needed
// but, hopefully not.
//
// E.g. z-250: 250.
$z-index: (
    z-0: 0,
    z-100: 100,
    z-200: 200,
    z-300: 300,
    z-400: 400,
    z-500: 500,
    z-600: 600,
    z-700: 700,
    z-800: 800,
    z-900: 900,
    z-1000: 1000
);
